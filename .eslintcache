[{"/home/berat/Desktop/e-Voting/src/index.js":"1","/home/berat/Desktop/e-Voting/src/App.js":"2","/home/berat/Desktop/e-Voting/src/HomeU.js":"3","/home/berat/Desktop/e-Voting/src/Navbar.js":"4","/home/berat/Desktop/e-Voting/src/NavbarU.js":"5","/home/berat/Desktop/e-Voting/src/SignIn.js":"6","/home/berat/Desktop/e-Voting/src/Home.js":"7","/home/berat/Desktop/e-Voting/src/CreateVotingForm.js":"8","/home/berat/Desktop/e-Voting/src/EditVoting.js":"9","/home/berat/Desktop/e-Voting/src/PasswordChangedForm.js":"10","/home/berat/Desktop/e-Voting/src/ResetPassword.js":"11","/home/berat/Desktop/e-Voting/src/ForgotPassword.js":"12","/home/berat/Desktop/e-Voting/src/AdminVotePanel.js":"13","/home/berat/Desktop/e-Voting/src/UserProfile.js":"14","/home/berat/Desktop/e-Voting/src/OrganizerProfile.js":"15"},{"size":197,"mtime":1609888950471,"results":"16","hashOfConfig":"17"},{"size":708,"mtime":1609889609634,"results":"18","hashOfConfig":"17"},{"size":3082,"mtime":1609889653922,"results":"19","hashOfConfig":"17"},{"size":1903,"mtime":1609876934832,"results":"20","hashOfConfig":"17"},{"size":1916,"mtime":1609886690260,"results":"21","hashOfConfig":"17"},{"size":347,"mtime":1609787247697,"results":"22","hashOfConfig":"17"},{"size":719,"mtime":1609786573224,"results":"23","hashOfConfig":"17"},{"size":6729,"mtime":1609869192012,"results":"24","hashOfConfig":"17"},{"size":4108,"mtime":1609854713925,"results":"25","hashOfConfig":"17"},{"size":2911,"mtime":1609869381384,"results":"26","hashOfConfig":"17"},{"size":2481,"mtime":1609869768204,"results":"27","hashOfConfig":"17"},{"size":3045,"mtime":1609869644180,"results":"28","hashOfConfig":"17"},{"size":3916,"mtime":1609878573579,"results":"29","hashOfConfig":"17"},{"size":2361,"mtime":1609884063462,"results":"30","hashOfConfig":"17"},{"size":3743,"mtime":1609883940451,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10ux72s",{"filePath":"34","messages":"35","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},"/home/berat/Desktop/e-Voting/src/index.js",[],"/home/berat/Desktop/e-Voting/src/App.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"/home/berat/Desktop/e-Voting/src/HomeU.js",["88","89"],"/home/berat/Desktop/e-Voting/src/Navbar.js",["90","91","92","93","94","95","96"],"import {\n  Layout,\n  Menu,\n  Breadcrumb,\n  Col,\n  Row,\n  Dropdown,\n  message,\n  Button,\n} from \"antd\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport {\n  MenuOutlined,\n  UserOutlined,\n  CloseOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Search from \"antd/lib/input/Search\";\nconst { Header, Content, Footer } = Layout;\n\nconst Navbar = () => {\n  const onSearch = (value) => console.log(value);\n\n  const menu = (\n    <Menu>\n      <Menu.Item icon={<UserOutlined />}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.google.com/\"\n        >Profile</a>\n      </Menu.Item>\n      <Menu.Item icon={<CloseOutlined />}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.facebook.com/\"\n        >\n          Log Out\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header>\n      <Row>\n        <Col span={8} className=\"title\">\n          <div>\n            <h1 style={{ color: \"white\" }}>BallotBox</h1>\n          </div>\n        </Col>\n        <Col span={8} className=\"searchBar\" style={{ color: \"white\" }}>\n          <div style={{ marginTop: \"15px\" }}>\n            <Search\n              placeholder=\"input search text\"\n              onSearch={onSearch}\n              enterButton\n            />\n          </div>\n        </Col>\n        <Col span={8} className=\"subMenu\">\n          <div style={{ float: \"right\" }}>\n            <Dropdown overlay={menu}>\n              <a\n                className=\"ant-dropdown-link\"\n                onClick={(e) => e.preventDefault()}\n                style={{ color: \"white\" }}\n              >\n                <MenuOutlined style={{ fontSize: \"20px\" }} /> <DownOutlined />\n              </a>\n            </Dropdown>\n          </div>\n        </Col>\n      </Row>\n    </Header>\n  );\n};\n\nexport default Navbar;\n",["97","98"],"/home/berat/Desktop/e-Voting/src/NavbarU.js",["99","100","101","102","103","104","105","106","107","108","109","110"],"import {\n  Layout,\n  Menu,\n  Breadcrumb,\n  Col,\n  Row,\n  Dropdown,\n  message,\n  Button,\n} from \"antd\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport {\n  MenuOutlined,\n  UserOutlined,\n  SettingFilled,\n  CloseOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Search from \"antd/lib/input/Search\";\nimport SignIn from \"./SignIn\";\nconst { Header, Content, Footer } = Layout;\n\nconst NavbarU = () => {\n  const onSearch = (value) => console.log(value);\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.alipay.com/\"\n        >\n          1st menu item\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.taobao.com/\"\n        >\n          2nd menu item\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.tmall.com/\"\n        >\n          3rd menu item\n        </a>\n      </Menu.Item>\n      <Menu.Item danger>a danger item</Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header>\n      <Row>\n        <Col span={8} className=\"title\">\n          <div>\n            <h1 style={{ color: \"white\" }}>BallotBox</h1>\n          </div>\n        </Col>\n        <Col span={8} className=\"searchBar\" style={{ color: \"white\" }}>\n          <div style={{ marginTop: \"15px\" }}>\n            <Search\n              placeholder=\"input search text\"\n              onSearch={onSearch}\n              enterButton\n            />\n          </div>\n        </Col>\n        <Col span={8} className=\"subMenu\">\n          <div style={{ float: \"right\" }}>\n          <Button type=\"primary\"><a href={SignIn}>Log In</a></Button>\n          </div>\n        </Col>\n      </Row>\n    </Header>\n  );\n};\n\nexport default NavbarU;\n","/home/berat/Desktop/e-Voting/src/SignIn.js",["111","112","113","114","115","116","117","118"],"import Layout, { Content } from \"antd/lib/layout/layout\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Typography } from \"antd\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\n\nconst { Text, Link } = Typography;\nconst SignIn = () => {\n  return (\n    <div style={{color:\"black\"}}> \n    \n    </div>\n  );\n};\n\nexport default SignIn;\n","/home/berat/Desktop/e-Voting/src/Home.js",[],"/home/berat/Desktop/e-Voting/src/CreateVotingForm.js",["119","120"],"import { Button, DatePicker, Divider, Form, Input, Radio, Switch } from \"antd\";\nimport Layout, { Content } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Typography } from \"antd\";\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nconst { Text, Link } = Typography;\n\nexport default class CreateVotingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      votings: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .post(\"localhost:8080/vote/post\")\n      .then((response) => console.log(response.data));\n  }\n\n  render() {\n    const formSuccess = (datas) => {\n      console.log(\"Form was finished successfully: \", datas);\n    };\n\n    const formFail = (error) => {\n      console.log(\"Form failed: \", error);\n    };\n    return (\n      <Layout className=\"layout\">\n        <Navbar />\n\n        <div style={{ marginTop: \"50px\" }}>\n          <Content style={{ padding: \"0 50px\" }}>\n            <div className=\"site-layout-content\">\n              <h2 style={{ textAlign: \"center\", fontSize: \"36px\" }}>\n                Create Voting\n              </h2>\n              <Divider style={{ color: \"gray\" }}/>\n              <Form\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={formSuccess}\n                onFinishFailed={formFail}\n              >\n                <Text>TITLE or MAIN QUESTION</Text>\n                <Form.Item\n                  name=\"title\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Text>DESCRIPTION</Text>\n                <Form.Item\n                  name=\"description\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Text>ORGANIZER</Text>\n                <Form.Item\n                  name=\"organizer\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Text>START DATE</Text>\n                <Form.Item\n                  name=\"startDate\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <DatePicker />\n                </Form.Item>\n\n                <Text>END DATE</Text>\n                <Form.Item\n                  name=\"endDate\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <DatePicker />\n                </Form.Item>\n\n                <Text>VOTING METHOD</Text>\n                <Form.Item\n                  name=\"method\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Radio.Group name=\"radiogroup\">\n                    <Radio.Button value={1}>Single</Radio.Button>\n                    <Radio.Button value={2}>Multiple</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Text>ACCESS TYPE</Text>\n                <Form.Item\n                  name=\"accessType\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Radio.Group name=\"radiogroup2\">\n                    <Radio.Button value={1}>E-mail</Radio.Button>\n                    <Radio.Button value={2}>Public</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n\n\n\n                <Text>OPTIONS</Text>\n                <Form.Item name=\"options\">\n                  <Form.List\n                    name=\"names\"\n                    rules={[\n                      {\n                        validator: async (_, names) => {\n                          if (!names || names.length < 2) {\n                            return Promise.reject(\n                              new Error(\"At least 2 options\")\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    {(fields, { add, remove }, { errors }) => (\n                      <>\n                        {fields.map((field, index) => (\n                          <Form.Item\n                            {...(index === 0)}\n                            required={false}\n                            key={field.key}\n                          >\n                            <Form.Item\n                              {...field}\n                              validateTrigger={[\"onChange\", \"onBlur\"]}\n                              rules={[\n                                {\n                                  required: true,\n                                  whitespace: true,\n                                  message:\n                                    \"Please input options's name or delete this field.\",\n                                },\n                              ]}\n                              noStyle\n                            >\n                              <Input\n                                placeholder=\"option name\"\n                                style={{ width: \"60%\" }}\n                              />\n                            </Form.Item>\n                            {fields.length > 1 ? (\n                              <MinusCircleOutlined style={{margin:\"5px\"}}\n                                className=\"dynamic-delete-button\"\n                                onClick={() => remove(field.name)}\n                              />\n                            ) : null}\n                          </Form.Item>\n                        ))}\n                        <Form.Item>\n                          <Button\n                            type=\"dashed\"\n                            onClick={() => add()}\n                            style={{ width: \"60%\" }}\n                            icon={<PlusOutlined />}\n                          >\n                            Add Options\n                          </Button>\n\n                          <Form.ErrorList errors={errors} />\n                        </Form.Item>\n                      </>\n                    )}\n                  </Form.List>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    className=\"button-color\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Create Voting\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </Content>\n        </div>\n      </Layout>\n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/EditVoting.js",["121","122","123"],"import { Button, DatePicker, Form, Input, Radio, Switch } from \"antd\";\nimport Layout, { Content } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Typography } from \"antd\";\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nconst { Text } = Typography;\n\nexport default class EditVoting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      votings: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .post(\"localhost:8080/vote/post\")\n      .then((response) => console.log(response.data));\n  }\n\n  render() {\n    const formSuccess = (datas) => {\n      console.log(\"Form was finished successfully: \", datas);\n    };\n\n    const formFail = (error) => {\n      console.log(\"Form failed: \", error);\n    };\n    return (\n      <Layout className=\"layout\">\n        <Navbar />\n\n        <div style={{ marginTop: \"50px\" }}>\n          <Content style={{ padding: \"0 50px\" }}>\n            <div className=\"site-layout-content\">\n              <h2 style={{ textAlign: \"center\", fontSize: \"36px\" }}>\n                Edit Voting\n              </h2>\n              <hr />\n\n              <Form\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={formSuccess}\n                onFinishFailed={formFail}\n              >\n                <Text>TITLE or MAIN QUESTION</Text>\n                <Form.Item\n                  name=\"title\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Input disabled />\n                </Form.Item>\n\n                <Text>DESCRIPTION</Text>\n                <Form.Item\n                  name=\"description\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Input disabled />\n                </Form.Item>\n\n                <Text>ORGANIZER</Text>\n                <Form.Item\n                  name=\"organizer\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Input disabled />\n                </Form.Item>\n\n                <Text>START DATE</Text>\n                <Form.Item\n                  name=\"startDate\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <DatePicker />\n                </Form.Item>\n\n                <Text>END DATE</Text>\n                <Form.Item\n                  name=\"endDate\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <DatePicker />\n                </Form.Item>\n\n                <Text>VOTING METHOD</Text>\n                <Form.Item\n                  name=\"method\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Radio.Group name=\"radiogroup\">\n                    <Radio.Button value={1}>Single</Radio.Button>\n                    <Radio.Button value={2}>Multiple</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Text>ACCESS TYPE</Text>\n                <Form.Item\n                  name=\"accessType\"\n                  rules={[{ required: true, message: \"Please input!\" }]}\n                >\n                  <Radio.Group name=\"radiogroup2\">\n                    <Radio.Button value={1}>E-mail</Radio.Button>\n                    <Radio.Button value={2}>Public</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n\n\n\n                <Text>OPTIONS</Text>\n                <h1>tablo şeklinde optionları bas çünkü zaten db den gelecek</h1>\n\n                <Form.Item>\n                  <Button\n                    className=\"button-color\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Create Voting\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </Content>\n        </div>\n      </Layout>\n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/PasswordChangedForm.js",["124","125","126","127"],"import { Form, Input, Button, Divider, Result } from \"antd\";\nimport Layout, { Content } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavbarU from \"./NavbarU\";\nimport { Typography } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Item from \"antd/es/list/Item\";\nconst { Password } = Input;\nconst { Text, Link } = Typography;\n\nexport default class PasswordChangedForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const formSuccess = (datas) => {\n      console.log(\"Form was finished successfully: \", datas);\n    };\n\n    const formFail = (error) => {\n      console.log(\"Form failed: \", error);\n    };\n    return (\n      <Layout className=\"layout\">\n        <NavbarU />\n\n        <div style={{ marginTop: \"50px\" }}>\n          <Content style={{ padding: \"0 50px\", textAlign: \"center\" }}>\n            <div className=\"site-layout-content\">\n              <br />\n              <br />\n              <Result\n                status=\"success\"\n                title=\"Your password has been changed successfully!\"\n                subTitle=\"You can sign in with your new password.\"\n              />\n\n              <Divider />\n              <Form\n                name=\"Form\"\n                initialValues={{\n                  recorder: true,\n                }}\n                onFinish={formSuccess}\n                onFinishFailed={formFail}\n              >\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please fill in your email\",\n                    },\n                  ]}\n                >\n                  <div>\n                    <Input\n                      placeholder=\"Email\"\n                      prefix={<MailOutlined />}\n                      inputMode=\"email\"\n                    />\n                  </div>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"pass\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please fill in your new password\",\n                    },\n                  ]}\n                >\n                  <Password\n                    placeholder=\"Password\"\n                    prefix={<LockOutlined />}\n                    minLength={8}\n                  />\n                </Form.Item>\n\n                <Divider />\n\n                <Form.Item>\n                  <Button\n                    className=\"button-color\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{}}\n                  >\n                    Sign In\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </Content>\n        </div>\n      </Layout>\n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/ResetPassword.js",["128","129","130","131","132","133"],"import { Form, Input, Button, Divider, Result } from \"antd\";\nimport Layout, { Content, Footer } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavbarU from \"./NavbarU\";\nimport { Typography } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Item from \"antd/es/list/Item\";\nimport Title from \"antd/lib/skeleton/Title\";\nconst { Password } = Input;\nconst { Text, Link } = Typography;\n\nexport default class PasswordChangedForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const formSuccess = (datas) => {\n      console.log(\"Form was finished successfully: \", datas);\n    };\n\n    const formFail = (error) => {\n      console.log(\"Form failed: \", error);\n    };\n    return (\n      <Layout className=\"layout\">\n        <NavbarU />\n\n        <Content style={{ padding: \"0 50px\" }}>\n          <div className=\"site-layout-content\">\n            <h2 style={{ textAlign: \"center\", fontSize: \"36px\" }}>\n              Reset Password\n            </h2>\n            <hr />\n            <Form\n              name=\"basic\"\n              initialValues={{ remember: true }}\n              onFinish={formSuccess}\n              onFinishFailed={formFail}\n            >\n              <Text>E-mail</Text>\n              <Form.Item\n                name=\"email\"\n                rules={[{ required: true, message: \"Please input!\" }]}\n              >\n                <Input prefix={<MailOutlined />} placeholder=\"New Password\" />\n              </Form.Item>\n\n              <Text>Password</Text>\n              <Form.Item\n                name=\"pass\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please fill in your new password\",\n                  },\n                ]}\n              >\n                <Password\n                  style={{}}\n                  placeholder=\"New Password\"\n                  prefix={<LockOutlined />}\n                  minLength={8}\n                />\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  className=\"button-color\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Reset Password\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>©2021 BallotBox</Footer>\n      </Layout>\n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/ForgotPassword.js",["134","135","136","137","138","139","140","141","142","143","144"],"import {\n  Form,\n  Input,\n  Button,\n  Divider,\n  Result,\n  message,\n  PageHeader,\n} from \"antd\";\nimport Layout, { Content, Footer } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavbarU from \"./NavbarU\";\nimport { Typography } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Item from \"antd/es/list/Item\";\nimport Title from \"antd/lib/skeleton/Title\";\nconst { Password } = Input;\nconst { Text, Link } = Typography;\n\nexport default class ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const formSuccess = (datas) => {\n      console.log(\"Form was finished successfully: \", datas);\n    };\n\n    const formFail = (error) => {\n      console.log(\"Form failed: \", error);\n    };\n\n    const info = () => {\n      message.info(\n        \"We sent an email with a link to get back into your account..\"\n      );\n    };\n    return (\n      <Layout className=\"layout\">\n        <NavbarU />\n\n        <div style={{ marginTop: \"50px\" }}>\n          <Content style={{ padding: \"0 50px\" }}>\n            <div className=\"site-layout-content\">\n              <h2 style={{ textAlign: \"center\", fontSize: \"36px\" }}>\n                Trouble logging in?\n              </h2>\n\n              <Divider />\n              <Form\n                name=\"Form\"\n                initialValues={{\n                  recorder: true,\n                }}\n                onFinish={formSuccess}\n                onFinishFailed={formFail}\n              >\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please fill in your email\",\n                    },\n                  ]}\n                >\n                  <div>\n                    <Input\n                      placeholder=\"Email\"\n                      prefix={<MailOutlined />}\n                      inputMode=\"email\"\n                      style={{}}\n                    />\n                  </div>\n                </Form.Item>\n\n                <Form.Item>\n                  <a href=\"\">\n                    <Button\n                      className=\"button-color\"\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      onClick={info}\n                      style={{}}\n                    >\n                      Send Login Link{\" \"}\n                    </Button>\n                  </a>\n                </Form.Item>\n\n                <Divider style={{ color: \"gray\" }}>OR</Divider>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href=\"\">\n                    <Button type=\"text\" style={{ color: \"darkblue\" }}>\n                      Create New Account\n                    </Button>\n                  </a>\n                </div>\n              </Form>\n            </div>\n          </Content>\n        </div>\n        <Footer style={{textAlign:\"center\"}}>©2021 BallotBox</Footer>\n      </Layout>\n      \n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/AdminVotePanel.js",["145","146","147","148","149","150","151","152","153","154","155"],"import { Button, DatePicker, Divider, Form, Input, Radio, Switch } from \"antd\";\nimport Layout, { Content, Footer } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Typography } from \"antd\";\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\";\nimport { List, Avatar, Skeleton } from \"antd\";\n\nimport reqwest from \"reqwest\";\n\nconst { Text, Link } = Typography;\n\nconst count = 5;\nconst fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\n\nexport default class AdminVotePanel extends Component {\n  state = {\n    initLoading: true,\n    loading: false,\n    data: [],\n    list: [],\n  };\n\n  componentDidMount() {\n    this.getData((res) => {\n      this.setState({\n        initLoading: false,\n        data: res.results,\n        list: res.results,\n      });\n    });\n  }\n\n  getData = (callback) => {\n    reqwest({\n      url: fakeDataUrl,\n      type: \"json\",\n      method: \"get\",\n      contentType: \"application/json\",\n      success: (res) => {\n        callback(res);\n      },\n    });\n  };\n\n  onLoadMore = () => {\n    this.setState({\n      loading: true,\n      list: this.state.data.concat(\n        [...new Array(count)].map(() => ({ loading: true, name: {} }))\n      ),\n    });\n    this.getData((res) => {\n      const data = this.state.data.concat(res.results);\n      this.setState(\n        {\n          data,\n          list: data,\n          loading: false,\n        },\n        () => {\n          // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n          // In real scene, you can using public method of react-virtualized:\n          // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n          window.dispatchEvent(new Event(\"resize\"));\n        }\n      );\n    });\n  };\n  render() {\n    const { initLoading, loading, list } = this.state;\n    const loadMore =\n      !initLoading && !loading ? (\n        <div\n          style={{\n            textAlign: \"center\",\n            marginTop: 12,\n            height: 32,\n            lineHeight: \"32px\",\n          }}\n        >\n          <Button onClick={this.onLoadMore}>loading more</Button>\n        </div>\n      ) : null;\n      \n    return (\n      <Layout className=\"layout\">\n        <Navbar />\n\n        <div style={{ marginTop: \"50px\" }}>\n          <Content style={{ padding: \"0 50px\" }}>\n            <div className=\"site-layout-content\">\n              <h2 style={{ textAlign: \"center\", fontSize: \"36px\" }}>\n                Admin Voting Panel\n              </h2>\n              <Divider style={{ color: \"gray\" }} />\n              <List\n                className=\"demo-loadmore-list\"\n                loading={initLoading}\n                itemLayout=\"horizontal\"\n                loadMore={loadMore}\n                dataSource={list}\n                renderItem={(item) => (\n                  <List.Item\n                    actions={[\n                      <a key=\"list-loadmore-edit\">edit</a>,\n                      <a key=\"list-loadmore-more\">more</a>,\n                    ]}\n                  >\n                    <Skeleton\n                      title={false}\n                      loading={item.loading}\n                      active\n                    >\n                      <List.Item.Meta\n                       \n                        title={\n                          <a href=\"https://ant.design\">{item.name.last}</a>\n                        }\n                        description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                      />\n                      <div>content</div>\n                    </Skeleton>\n                  </List.Item>\n                )}\n              />\n            </div>\n          </Content>\n        </div>\n        <Footer style={{ textAlign: \"center\" }}>©2021 BallotBox</Footer>\n      </Layout>\n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/UserProfile.js",["156","157","158","159","160","161","162","163","164","165","166","167"],"import {\n  Button,\n  DatePicker,\n  Descriptions,\n  Divider,\n  Form,\n  Input,\n  Radio,\n  Switch,\n} from \"antd\";\nimport Layout, { Content } from \"antd/lib/layout/layout\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Typography } from \"antd\";\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\";\nimport {\n  MinusCircleOutlined,\n  PlusOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nconst { Text, Link } = Typography;\n\nexport default class UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      votings: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .post(\"localhost:8080/vote/post\")\n      .then((response) => console.log(response.data));\n  }\n\n  render() {\n    const formSuccess = (datas) => {\n      console.log(\"Form was finished successfully: \", datas);\n    };\n\n    const formFail = (error) => {\n      console.log(\"Form failed: \", error);\n    };\n    return (\n      <Layout className=\"layout\">\n        <Navbar />\n\n        <div style={{ marginTop: \"50px\" }}>\n          <Content style={{ padding: \"0 50px\" }}>\n            <div className=\"site-layout-content\">\n              <h2 style={{ textAlign: \"left\" }}>Profile</h2>\n              <Divider style={{ color: \"gray\" }} />\n              <div style={{ textAlign: \"center\" }}>\n                <Avatar size={64} icon={<UserOutlined />} />\n\n                <Descriptions title=\"User Info\" layout=\"vertical\">\n                  <Descriptions.Item\n                    label=\"First Name\"\n                    labelStyle={{ fontWeight: \"bold\", fontSize: \"16px\" }}\n                  >\n                    Name of the user\n                  </Descriptions.Item>\n\n                  <Descriptions.Item\n                    label=\"Last Name\"\n                    labelStyle={{ fontWeight: \"bold\", fontSize: \"16px\" }}\n                  >\n                    Surname of the user\n                  </Descriptions.Item>\n\n                  <Descriptions.Item\n                    label=\"E-mail\"\n                    labelStyle={{ fontWeight: \"bold\", fontSize: \"16px\" }}\n                  >\n                    ballotbox@info.com\n                  </Descriptions.Item>\n                </Descriptions>\n              </div>\n            </div>\n          </Content>\n        </div>\n      </Layout>\n    );\n  }\n}\n","/home/berat/Desktop/e-Voting/src/OrganizerProfile.js",["168","169","170","171","172"],"import { Button, Layout, Avatar, Menu, Input, Breadcrumb } from \"antd\";\nimport React from \"react\";\nimport {\n  AudioOutlined,\n  UserOutlined,\n  FileSearchOutlined,\n  FolderViewOutlined,\n} from \"@ant-design/icons\";\nimport Title from \"antd/es/typography/Title\";\nimport Search from \"antd/lib/input/Search\";\nimport Item from \"antd/es/list/Item\";\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction OrganizerProfile() {\n  const styleHeader = {\n    fontFamily: \"Courier New\",\n    fontSize: 40,\n    fontWeight: \"bold\",\n  };\n\n\n  const { Search } = Input;\n\n  const suffix = (\n    <AudioOutlined\n      style={{\n        fontSize: 16,\n        color: \"#1890ff\",\n      }}\n    />\n  );\n\n  const onSearch = (value) => console.log(value);\n  return (\n    <div className=\"outside\">\n      <Layout>\n        <Header\n          style={{ backgroundColor: \"mediumpurple\", padding: 10, height: 60 }}\n        >\n          <Search\n            placeholder=\"Search\"\n            onSearch={onSearch}\n            style={{\n              width: \"50%\",\n              textAlign: \"left\",\n              alignItems: \"center\",\n              paddingLeft: 300,\n            }}\n            size=\"large\"\n            suffix={suffix}\n          />\n          <Avatar\n            size={44}\n            style={{ float: \"right\" }}\n            icon={<UserOutlined />}\n          />\n          <Title\n            style={{ color: \"white\", float: \"left\", fontFamily: \"unset\" }}\n            level={3}\n          >\n            BALLOT BOX\n          </Title>\n        </Header>\n        <br />\n        <Layout>\n          <div className=\"box\">\n            <Sider style={{ color: \"white\" }}>\n              <Breadcrumb></Breadcrumb>\n              <Menu defaultSelectedKeys={[\"filter\"]}>\n                <Avatar\n                  size={70}\n                  style={{ display: \"inline-block\", marginLeft: 50 }}\n                  icon={<UserOutlined />}\n                />\n\n                <Menu.Item>\n                  <Button type=\"text\"> Create Voting</Button>\n                </Menu.Item>\n                <Menu.Item>\n                  <Button type=\"text\"> Change Password</Button>\n                </Menu.Item>\n                <Menu.Item>\n                  <Button type=\"text\"> Sign Out</Button>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n          </div>\n          <Layout>\n            <Content style={{ padding: \"0 50px\" }}>\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\n                <Breadcrumb.Item style={{ fontSize: \"24px\" }}>\n                  {\" \"}\n                  My Voting{\" \"}\n                </Breadcrumb.Item>\n              </Breadcrumb>\n              <div\n                className=\"site-layout-content\"\n                style={{ padding: 24, minHeight: 800 }}\n              >\n                <Menu defaultSelectedKeys={[\"filter\"]}>\n                  <Menu.Item>\n                    <Button type=\"text\"> Voting name</Button>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Button type=\"text\"> Voting name</Button>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Button type=\"text\"> Voting name</Button>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Button type=\"text\"> Voting name</Button>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Button type=\"text\"> Voting name</Button>\n                  </Menu.Item>\n                </Menu>\n              </div>\n            </Content>\n            <Footer style={{ textAlign: \"center\", color: \"gray\" }}>\n              English 2020 Ballot Box\n            </Footer>\n          </Layout>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default OrganizerProfile;\n",{"ruleId":"173","severity":1,"message":"174","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":14},{"ruleId":"173","severity":1,"message":"177","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":15},{"ruleId":"173","severity":1,"message":"178","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":12},{"ruleId":"173","severity":1,"message":"179","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":14},{"ruleId":"173","severity":1,"message":"180","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":24},{"ruleId":"173","severity":1,"message":"181","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":18},{"ruleId":"173","severity":1,"message":"182","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":27},{"ruleId":"173","severity":1,"message":"183","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":21},{"ruleId":"173","severity":1,"message":"184","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":22},{"ruleId":"173","severity":1,"message":"185","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":22},{"ruleId":"173","severity":1,"message":"186","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":19},{"ruleId":"173","severity":1,"message":"187","line":14,"column":8,"nodeType":"175","messageId":"176","endLine":14,"endColumn":24},{"ruleId":"173","severity":1,"message":"188","line":15,"column":10,"nodeType":"175","messageId":"176","endLine":15,"endColumn":15},{"ruleId":"173","severity":1,"message":"189","line":15,"column":17,"nodeType":"175","messageId":"176","endLine":15,"endColumn":23},{"ruleId":"173","severity":1,"message":"188","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"173","severity":1,"message":"189","line":8,"column":17,"nodeType":"175","messageId":"176","endLine":8,"endColumn":23},{"ruleId":"173","severity":1,"message":"190","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":13},{"ruleId":"173","severity":1,"message":"191","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":10},{"ruleId":"173","severity":1,"message":"192","line":9,"column":3,"nodeType":"175","messageId":"176","endLine":9,"endColumn":9},{"ruleId":"173","severity":1,"message":"193","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":15},{"ruleId":"173","severity":1,"message":"194","line":21,"column":17,"nodeType":"175","messageId":"176","endLine":21,"endColumn":24},{"ruleId":"173","severity":1,"message":"195","line":21,"column":26,"nodeType":"175","messageId":"176","endLine":21,"endColumn":32},{"ruleId":"196","severity":1,"message":"197","line":66,"column":15,"nodeType":"198","endLine":70,"endColumn":16},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"173","severity":1,"message":"190","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":13},{"ruleId":"173","severity":1,"message":"203","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":11},{"ruleId":"173","severity":1,"message":"191","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":10},{"ruleId":"173","severity":1,"message":"193","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":15},{"ruleId":"173","severity":1,"message":"204","line":13,"column":3,"nodeType":"175","messageId":"176","endLine":13,"endColumn":15},{"ruleId":"173","severity":1,"message":"205","line":14,"column":3,"nodeType":"175","messageId":"176","endLine":14,"endColumn":15},{"ruleId":"173","severity":1,"message":"206","line":15,"column":3,"nodeType":"175","messageId":"176","endLine":15,"endColumn":16},{"ruleId":"173","severity":1,"message":"207","line":16,"column":3,"nodeType":"175","messageId":"176","endLine":16,"endColumn":16},{"ruleId":"173","severity":1,"message":"208","line":17,"column":3,"nodeType":"175","messageId":"176","endLine":17,"endColumn":15},{"ruleId":"173","severity":1,"message":"194","line":23,"column":17,"nodeType":"175","messageId":"176","endLine":23,"endColumn":24},{"ruleId":"173","severity":1,"message":"195","line":23,"column":26,"nodeType":"175","messageId":"176","endLine":23,"endColumn":32},{"ruleId":"173","severity":1,"message":"209","line":28,"column":9,"nodeType":"175","messageId":"176","endLine":28,"endColumn":13},{"ruleId":"173","severity":1,"message":"210","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":14},{"ruleId":"173","severity":1,"message":"211","line":1,"column":18,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"212","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":14},{"ruleId":"173","severity":1,"message":"213","line":5,"column":16,"nodeType":"175","messageId":"176","endLine":5,"endColumn":21},{"ruleId":"173","severity":1,"message":"192","line":5,"column":23,"nodeType":"175","messageId":"176","endLine":5,"endColumn":29},{"ruleId":"173","severity":1,"message":"214","line":5,"column":31,"nodeType":"175","messageId":"176","endLine":5,"endColumn":39},{"ruleId":"173","severity":1,"message":"215","line":7,"column":9,"nodeType":"175","messageId":"176","endLine":7,"endColumn":13},{"ruleId":"173","severity":1,"message":"216","line":7,"column":15,"nodeType":"175","messageId":"176","endLine":7,"endColumn":19},{"ruleId":"173","severity":1,"message":"217","line":1,"column":59,"nodeType":"175","messageId":"176","endLine":1,"endColumn":65},{"ruleId":"173","severity":1,"message":"216","line":9,"column":15,"nodeType":"175","messageId":"176","endLine":9,"endColumn":19},{"ruleId":"173","severity":1,"message":"217","line":1,"column":50,"nodeType":"175","messageId":"176","endLine":1,"endColumn":56},{"ruleId":"173","severity":1,"message":"218","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":29},{"ruleId":"173","severity":1,"message":"219","line":8,"column":31,"nodeType":"175","messageId":"176","endLine":8,"endColumn":43},{"ruleId":"173","severity":1,"message":"220","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":12},{"ruleId":"173","severity":1,"message":"215","line":10,"column":9,"nodeType":"175","messageId":"176","endLine":10,"endColumn":13},{"ruleId":"173","severity":1,"message":"216","line":10,"column":15,"nodeType":"175","messageId":"176","endLine":10,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":13,"column":3,"nodeType":"223","messageId":"224","endLine":15,"endColumn":4},{"ruleId":"173","severity":1,"message":"225","line":1,"column":31,"nodeType":"175","messageId":"176","endLine":1,"endColumn":38},{"ruleId":"173","severity":1,"message":"226","line":1,"column":40,"nodeType":"175","messageId":"176","endLine":1,"endColumn":46},{"ruleId":"173","severity":1,"message":"220","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":12},{"ruleId":"173","severity":1,"message":"227","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":13},{"ruleId":"173","severity":1,"message":"216","line":11,"column":15,"nodeType":"175","messageId":"176","endLine":11,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":14,"column":3,"nodeType":"223","messageId":"224","endLine":16,"endColumn":4},{"ruleId":"173","severity":1,"message":"226","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":9},{"ruleId":"173","severity":1,"message":"228","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":13},{"ruleId":"173","severity":1,"message":"229","line":15,"column":24,"nodeType":"175","messageId":"176","endLine":15,"endColumn":36},{"ruleId":"173","severity":1,"message":"220","line":16,"column":8,"nodeType":"175","messageId":"176","endLine":16,"endColumn":12},{"ruleId":"173","severity":1,"message":"227","line":17,"column":8,"nodeType":"175","messageId":"176","endLine":17,"endColumn":13},{"ruleId":"173","severity":1,"message":"230","line":18,"column":9,"nodeType":"175","messageId":"176","endLine":18,"endColumn":17},{"ruleId":"173","severity":1,"message":"215","line":19,"column":9,"nodeType":"175","messageId":"176","endLine":19,"endColumn":13},{"ruleId":"173","severity":1,"message":"216","line":19,"column":15,"nodeType":"175","messageId":"176","endLine":19,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":22,"column":3,"nodeType":"223","messageId":"224","endLine":24,"endColumn":4},{"ruleId":"196","severity":1,"message":"231","line":80,"column":19,"nodeType":"198","endLine":80,"endColumn":30},{"ruleId":"196","severity":1,"message":"231","line":95,"column":19,"nodeType":"198","endLine":95,"endColumn":30},{"ruleId":"173","severity":1,"message":"232","line":1,"column":18,"nodeType":"175","messageId":"176","endLine":1,"endColumn":28},{"ruleId":"173","severity":1,"message":"212","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":43},{"ruleId":"173","severity":1,"message":"213","line":1,"column":45,"nodeType":"175","messageId":"176","endLine":1,"endColumn":50},{"ruleId":"173","severity":1,"message":"233","line":1,"column":52,"nodeType":"175","messageId":"176","endLine":1,"endColumn":57},{"ruleId":"173","severity":1,"message":"217","line":1,"column":59,"nodeType":"175","messageId":"176","endLine":1,"endColumn":65},{"ruleId":"173","severity":1,"message":"234","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":13},{"ruleId":"173","severity":1,"message":"235","line":8,"column":16,"nodeType":"175","messageId":"176","endLine":8,"endColumn":22},{"ruleId":"173","severity":1,"message":"215","line":12,"column":9,"nodeType":"175","messageId":"176","endLine":12,"endColumn":13},{"ruleId":"173","severity":1,"message":"216","line":12,"column":15,"nodeType":"175","messageId":"176","endLine":12,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":107,"column":23,"nodeType":"198","endLine":107,"endColumn":51},{"ruleId":"196","severity":1,"message":"197","line":108,"column":23,"nodeType":"198","endLine":108,"endColumn":51},{"ruleId":"173","severity":1,"message":"192","line":2,"column":3,"nodeType":"175","messageId":"176","endLine":2,"endColumn":9},{"ruleId":"173","severity":1,"message":"232","line":3,"column":3,"nodeType":"175","messageId":"176","endLine":3,"endColumn":13},{"ruleId":"173","severity":1,"message":"212","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":7},{"ruleId":"173","severity":1,"message":"213","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":8},{"ruleId":"173","severity":1,"message":"233","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":8},{"ruleId":"173","severity":1,"message":"217","line":9,"column":3,"nodeType":"175","messageId":"176","endLine":9,"endColumn":9},{"ruleId":"173","severity":1,"message":"218","line":18,"column":3,"nodeType":"175","messageId":"176","endLine":18,"endColumn":22},{"ruleId":"173","severity":1,"message":"219","line":19,"column":3,"nodeType":"175","messageId":"176","endLine":19,"endColumn":15},{"ruleId":"173","severity":1,"message":"215","line":23,"column":9,"nodeType":"175","messageId":"176","endLine":23,"endColumn":13},{"ruleId":"173","severity":1,"message":"216","line":23,"column":15,"nodeType":"175","messageId":"176","endLine":23,"endColumn":19},{"ruleId":"173","severity":1,"message":"236","line":40,"column":11,"nodeType":"175","messageId":"176","endLine":40,"endColumn":22},{"ruleId":"173","severity":1,"message":"237","line":44,"column":11,"nodeType":"175","messageId":"176","endLine":44,"endColumn":19},{"ruleId":"173","severity":1,"message":"238","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":21},{"ruleId":"173","severity":1,"message":"239","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":21},{"ruleId":"173","severity":1,"message":"240","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":14},{"ruleId":"173","severity":1,"message":"220","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":12},{"ruleId":"173","severity":1,"message":"241","line":15,"column":9,"nodeType":"175","messageId":"176","endLine":15,"endColumn":20},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavbarU' is defined but never used.","'Home' is defined but never used.","'SignIn' is defined but never used.","'CreateVotingForm' is defined but never used.","'EditVoting' is defined but never used.","'PasswordChangedForm' is defined but never used.","'ResetPassword' is defined but never used.","'ForgotPassword' is defined but never used.","'AdminVotePanel' is defined but never used.","'UserProfile' is defined but never used.","'OrganizerProfile' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Breadcrumb' is defined but never used.","'message' is defined but never used.","'Button' is defined but never used.","'SubMenu' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'Dropdown' is defined but never used.","'MenuOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'SettingFilled' is defined but never used.","'CloseOutlined' is defined but never used.","'DownOutlined' is defined but never used.","'menu' is assigned a value but never used.","'Layout' is defined but never used.","'Content' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Text' is assigned a value but never used.","'Link' is assigned a value but never used.","'Switch' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'Item' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Divider' is defined but never used.","'Result' is defined but never used.","'Title' is defined but never used.","'PageHeader' is defined but never used.","'LockOutlined' is defined but never used.","'Password' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DatePicker' is defined but never used.","'Radio' is defined but never used.","'axios' is defined but never used.","'Avatar' is defined but never used.","'formSuccess' is assigned a value but never used.","'formFail' is assigned a value but never used.","'FileSearchOutlined' is defined but never used.","'FolderViewOutlined' is defined but never used.","'Search' is defined but never used.","'styleHeader' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]